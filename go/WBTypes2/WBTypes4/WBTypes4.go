package main

func main() {
	data := [5]int{1, 2, 3, 4, 5}

	//i := 7
	//fmt.Println(data[i]) // panic

	//fmt.Println(data[7]) // compilation error
}

/*Если вы пытаетесь получить доступ к элементу массива с индексом, который превышает его размер,
приводит к панике во время выполнения (runtime panic).
Это связано с тем, что Go проверяет границы массива во время выполнения.*/

/*В этом случае вы пытаетесь получить доступ к элементу массива data с фиксированным индексом 4.
Поскольку компилятор Go знает, что массив data имеет длину 3, он может сразу определить, что индекс 4 недопустим, выдает ошибку компиляции.
Это происходит потому, что компилятор проверяет доступ к элементам массива на этапе компиляции, если индекс выходит за пределы,
он не позволяет скомпилировать программу.*/

/*Таким образом, разница заключается в том, что в первом случае индекс передается через переменную,
проверка границ происходит во время выполнения, что приводит к панике, а во втором случае индекс указан явно,
компилятор может сразу обнаружить ошибку, что приводит к ошибке компиляции.*/
