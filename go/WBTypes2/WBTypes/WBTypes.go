package main

import "fmt"

func main() {
	// Создаем срез с явно указанной вместимостью
	slice := make([]int, 5, 10)
	fmt.Println("Длина среза:", len(slice))       // Вывод длины среза: 5
	fmt.Println("Вместимость среза:", cap(slice)) // Вывод вместимости среза: 10

	// Создаем новый срез, взяв подсрез из существующего
	//newSlice := slice[1:5]
	newSlice := slice[3:5]
	fmt.Println(newSlice)
	fmt.Println("Длина нового среза:", len(newSlice))       // Вывод длины нового среза: 2
	fmt.Println("Вместимость нового среза:", cap(newSlice)) // Вывод вместимости нового среза: 7

	//newSlice = slice[:cap(slice)]
	//fmt.Println(newSlice)

	/*Когда мы создаем подсрез newSlice с помощью slice[3:5], то на самом деле вместимость нового среза будет такой же,
	как вместимость исходного среза slice, но с учетом смещения начала подсреза. Таким образом, капасити newSlice будет 7,
	потому что в новом срезе осталось 7 элементов от индекса 3 до индекса 9.
	Когда мы создаем newSlice, он указывает на те же элементы в куче, что и slice, но смещается на определенное количество элементов вправо */
}
