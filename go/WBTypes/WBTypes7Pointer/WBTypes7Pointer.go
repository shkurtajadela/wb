package main

import "fmt"

/* 	Указатели в Go - это переменные, которые хранят адреса памяти других переменных.
Они позволяют нам обращаться к значению по его адресу, что может быть полезно, например,
при передаче аргументов функции по ссылке или при работе с большими объемами данных, чтобы избежать копирования*/

func main() {
	var num int = 42
	var ptr *int = &num // создаётся указатель ptr, который хранит адрес переменной num

	/*var ptr *int:
	Объявление переменной ptr.
	Тип этой переменной - указатель на int, что означает, что ptr может хранить адрес памяти, где находится значение типа int.
	Синтаксис = &num: Присваивание переменной ptr адреса памяти переменной num. Символ & используется для получения адреса переменной num.*/

	fmt.Println("Значение переменной num:", num)
	fmt.Println("Адрес переменной num:", &num)
	fmt.Println("Значение указателя ptr:", ptr)
	fmt.Println("Значение, на которое указывает указатель ptr:", *ptr)

	// Изменение значения через указатель
	*ptr = 100
	fmt.Println("Новое значение переменной num после изменения через указатель:", num)
}

/*
	Этот пример демонстрирует основные концепции указателей в Go,
	включая создание указателя, операции взятия адреса и разыменования,
	а также изменение значения переменной через указатель.*/

/*

	Вот основные концепции указателей в Go:

	Объявление указателей:
	Указатели объявляются с помощью символа *, за которым следует тип данных, на который указывает указатель.
	Например:


	var ptr *int  // указатель на целое число
	Использование оператора взятия адреса: Для получения адреса переменной используется оператор &.
	Например:


	var num int = 42
	ptr = &num  // ptr теперь указывает на адрес переменной num
	Разыменование указателя: Для доступа к значению, на которое указывает указатель, используется оператор *.
	Например:


	fmt.Println("Значение переменной, на которую указывает ptr:", *ptr)

	Нулевое значение указателя: Нулевое значение указателя (nil) указывает на отсутствие конкретного адреса.
	Нулевой указатель в Go имеет тип nil.

	Передача указателей в функции:
	Указатели могут быть переданы функции в качестве аргументов,
	что позволяет функции изменять значения переменных в вызывающем коде.*/
